package tp03.ejercicio1;

import tp02.ejercicio2.ListaEnlazadaGenerica;
import tp02.ejercicio3.ColaGenerica;

public class ProfundidadArbolBinario {
	ArbolBinario<Integer> arbol;
	
	public ProfundidadArbolBinario() {
		
	}
	
	public ProfundidadArbolBinario(ArbolBinario<Integer> dato) {
		this.arbol = dato;
	}
	
	
	
	public int sumaElementosProfundidad(int p) {
		if(!this.arbol.esVacio()) {
			return calcularProfundidad(this.arbol,p);
		}
		return -1;
	
	}
	
	public int calcularProfundidad(ArbolBinario<Integer> arbol,int p) {
		int camino = 0;
		ArbolBinario<Integer> arbolAux = arbol ;
		ColaGenerica<ArbolBinario<Integer>> cola = new ColaGenerica<ArbolBinario<Integer>>();
		boolean termino = false;
		cola.encolar(arbol);
		while ((!cola.esVacia()) & (!termino)) {
			arbolAux = cola.desencolar();
			if(arbolAux != null) {
				if(arbolAux.getDato() != p) {
					if(arbol.tieneHijoIzquierdo()) {
						calcularProf*undidad(arbolAux.getHijoIzquierdo(), p);
					}
					if(arbol.tieneHijoDerecho()) {
						calcularProfundidad(arbolAux.getHijoDerecho(), p);
					}
				}
			}
			if(!cola.esVacia()) {
				camino++;
				cola.encolar(null);
				termino = true;
				if(arbol.getDato() == p) {
					termino = true;
				}
			}
		}
		return camino;
	}
}
